var searchIndex = new Map(JSON.parse('[["c4_rust",{"t":"PPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPIPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPFPGGPPPNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNOOOOONNNNNNOOOOHONNNONOOONNNOOONNNNNNNNNNOONNNNNO","n":["ADD","ADJ","AND","Add","And","Assign","BNZ","BZ","Brak","C4","CHAR","CLOS","Char","Cond","DIV","Dec","Div","ENT","EQ","EXIT","Else","Enum","Eq","FREE","FUN","Fun","GE","GT","Ge","Glo","Gt","IMM","INT","Id","If","Inc","Int","","JMP","JSR","LC","LE","LEA","LEV","LI","LT","Lan","Le","Loc","Lor","Lt","MALC","MCMP","MOD","MSET","MUL","Mod","Mul","NE","Ne","Num","OPEN","OR","OpCode","Or","PRTF","PSH","PTR","READ","Return","SC","SHL","SHR","SI","SUB","Shl","Shr","Sizeof","Sub","Symbol","Sys","TokenType","Type","While","XOR","Xor","add_keyword","add_syscall","borrow","","","","","borrow_mut","","","","","class","clone","","","clone_into","","","clone_to_uninit","","","compile","compile_assignment","compile_block","compile_function","compile_function_definition","compile_if_statement","compile_return_statement","compile_statement","compile_while_statement","current_char","cycle","data","data_index","debug","e","emit","emit_with_operand","eq","","expr","find_main","find_symbol","fmt","","","from","","","","","h_class","h_type","h_val","hash","id","init_symbol_table","into","","","","","le","line","loc","lp","main","name","new","next","next_char","p","run","source","src","symbols","to_owned","","","token","","token_val","try_from","","","","","try_into","","","","","type_","","type_id","","","","","value"],"q":[[0,"c4_rust"],[187,"alloc::string"],[188,"core::result"],[189,"core::option"],[190,"core::fmt"],[191,"core::any"]],"i":"n00Bl00110`A`2112112221112212211120111`12222222211111222221121122`122021222221111`1``121d02031Ab314200420420420111111111111111114211142031420000011314201111`011111111420101314203142010314200","f":"``````````````````````````````````````````````````````````````````````````````````````{{{f{bd}}{f{h}}j}l}0{f{{f{c}}}{}}0000{{{f{b}}}{{f{bc}}}{}}0000`{{{f{n}}}n}{{{f{A`}}}A`}{{{f{Ab}}}Ab}{{f{f{bc}}}l{}}00{{fAd}l}00{{{f{bd}}}{{Ah{lAf}}}}00{{{f{bd}}{f{h}}j}{{Ah{lAf}}}}11111{{{f{d}}}Aj}`````{{{f{bd}}n}l}{{{f{bd}}nAl}l}{{{f{n}}{f{n}}}An}{{{f{A`}}{f{A`}}}An}{{{f{bd}}j}{{Ah{lAf}}}}{{{f{d}}}{{Bb{B`}}}}{{{f{d}}j{f{h}}}{{Bb{B`}}}}{{{f{n}}{f{bBd}}}Bf}{{{f{A`}}{f{bBd}}}Bf}{{{f{Ab}}{f{bBd}}}Bf}{cc{}}0000`````{{{f{bd}}}l}{{}c{}}0000````{{}l}`{{}d}3{{{f{bd}}}Aj}`{{{f{bd}}B`B`{f{{Bh{Af}}}}}{{Ah{jAf}}}}```{fc{}}00```{c{{Ah{e}}}{}{}}0000{{}{{Ah{c}}}{}}0000``{fBj}0000`","D":"Ad","p":[[0,"mut"],[5,"C4",0],[1,"reference",null,null,1],[1,"str"],[1,"i32"],[1,"unit"],[6,"OpCode",0],[6,"Type",0],[5,"Symbol",0],[1,"u8"],[5,"String",187],[6,"Result",188,null,1],[1,"char"],[1,"i64"],[1,"bool"],[1,"usize"],[6,"Option",189,null,1],[5,"Formatter",190],[8,"Result",190],[1,"slice"],[5,"TypeId",191],[6,"TokenType",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAALEAAwAAAIUAiwAFAJYAJQA=","P":[[88,"T"],[99,""],[102,"T"],[105,""],[133,"T"],[143,""],[144,"U"],[153,""],[163,"T"],[169,"U,T"],[174,"U"],[181,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3045]}